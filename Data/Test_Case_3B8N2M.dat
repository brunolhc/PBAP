/*********************************************
 * OPL 12.6.0.0 Machine and Berth Alocation Problem
 Model and Algorithm created by Bruno Luís Hönigmann Cereser
 * Creation Date: 24/09/2015 at 15:58:09
 *********************************************/
 
SheetConnection sheet("Test_Case_3B8N2M.xlsb");

N from SheetRead(sheet,"'Data'!A2");
B from SheetRead(sheet,"'Data'!A5");
P from SheetRead(sheet,"'Data'!A8");
M from SheetRead(sheet,"'Data'!A11");

aux_input_1 from SheetRead(sheet,"'Data'!E1");
arrival_time from SheetRead(sheet,aux_input_1);

aux_input_2 from SheetRead(sheet,"'Data'!F1");
deadline_time from SheetRead(sheet,aux_input_2);

service_time = [ 
 //Pattern 1 
[[ 300.00 300.00 300.00 300.00 300.00 300.00 300.00 300.00 ] [ 44.44 55.56 22.22 33.33 88.89 11.11 100.00 11.11 ] [ 11.11 13.89 5.56 8.33 22.22 2.78 25.00 2.78 ] ] 

 //Pattern 2 
[[ 300.00 300.00 300.00 300.00 300.00 300.00 300.00 300.00 ] [ 22.22 27.78 11.11 16.67 44.44 5.56 50.00 5.56 ] [ 22.22 27.78 11.11 16.67 44.44 5.56 50.00 5.56 ] ] 

 //Pattern 3 
[[ 300.00 300.00 300.00 300.00 300.00 300.00 300.00 300.00 ] [ 11.11 13.89 5.56 8.33 22.22 2.78 25.00 2.78 ] [ 44.44 55.56 22.22 33.33 88.89 11.11 100.00 11.11 ] ] 

 //Pattern 4 
[[ 44.44 55.56 22.22 33.33 88.89 11.11 100.00 11.11 ] [ 300.00 300.00 300.00 300.00 300.00 300.00 300.00 300.00 ] [ 11.11 13.89 5.56 8.33 22.22 2.78 25.00 2.78 ] ] 

 //Pattern 5 
[[ 66.67 83.33 33.33 50.00 133.33 16.67 150.00 16.67 ] [ 44.44 55.56 22.22 33.33 88.89 11.11 100.00 11.11 ] [ 22.22 27.78 11.11 16.67 44.44 5.56 50.00 5.56 ] ] 

 //Pattern 6 
[[ 66.67 83.33 33.33 50.00 133.33 16.67 150.00 16.67 ] [ 22.22 27.78 11.11 16.67 44.44 5.56 50.00 5.56 ] [ 44.44 55.56 22.22 33.33 88.89 11.11 100.00 11.11 ] ] 

 //Pattern 7 
[[ 44.44 55.56 22.22 33.33 88.89 11.11 100.00 11.11 ] [ 11.11 13.89 5.56 8.33 22.22 2.78 25.00 2.78 ] [ 300.00 300.00 300.00 300.00 300.00 300.00 300.00 300.00 ] ] 

 //Pattern 8 
[[ 44.44 55.56 22.22 33.33 88.89 11.11 100.00 11.11 ] [ 66.67 83.33 33.33 50.00 133.33 16.67 150.00 16.67 ] [ 22.22 27.78 11.11 16.67 44.44 5.56 50.00 5.56 ] ] 

 //Pattern 9 
[[ 44.44 55.56 22.22 33.33 88.89 11.11 100.00 11.11 ] [ 44.44 55.56 22.22 33.33 88.89 11.11 100.00 11.11 ] [ 33.33 41.67 16.67 25.00 66.67 8.33 75.00 8.33 ] ] 

 //Pattern 10 
[[ 44.44 55.56 22.22 33.33 88.89 11.11 100.00 11.11 ] [ 33.33 41.67 16.67 25.00 66.67 8.33 75.00 8.33 ] [ 44.44 55.56 22.22 33.33 88.89 11.11 100.00 11.11 ] ] 

 //Pattern 11 
[[ 44.44 55.56 22.22 33.33 88.89 11.11 100.00 11.11 ] [ 22.22 27.78 11.11 16.67 44.44 5.56 50.00 5.56 ] [ 66.67 83.33 33.33 50.00 133.33 16.67 150.00 16.67 ] ] 

 //Pattern 12 
[[ 22.22 27.78 11.11 16.67 44.44 5.56 50.00 5.56 ] [ 300.00 300.00 300.00 300.00 300.00 300.00 300.00 300.00 ] [ 22.22 27.78 11.11 16.67 44.44 5.56 50.00 5.56 ] ] 

 //Pattern 13 
[[ 33.33 41.67 16.67 25.00 66.67 8.33 75.00 8.33 ] [ 44.44 55.56 22.22 33.33 88.89 11.11 100.00 11.11 ] [ 44.44 55.56 22.22 33.33 88.89 11.11 100.00 11.11 ] ] 

 //Pattern 14 
[[ 22.22 27.78 11.11 16.67 44.44 5.56 50.00 5.56 ] [ 22.22 27.78 11.11 16.67 44.44 5.56 50.00 5.56 ] [ 300.00 300.00 300.00 300.00 300.00 300.00 300.00 300.00 ] ] 

 //Pattern 15 
[[ 22.22 27.78 11.11 16.67 44.44 5.56 50.00 5.56 ] [ 66.67 83.33 33.33 50.00 133.33 16.67 150.00 16.67 ] [ 44.44 55.56 22.22 33.33 88.89 11.11 100.00 11.11 ] ] 

 //Pattern 16 
[[ 22.22 27.78 11.11 16.67 44.44 5.56 50.00 5.56 ] [ 44.44 55.56 22.22 33.33 88.89 11.11 100.00 11.11 ] [ 66.67 83.33 33.33 50.00 133.33 16.67 150.00 16.67 ] ] 

 //Pattern 17 
[[ 11.11 13.89 5.56 8.33 22.22 2.78 25.00 2.78 ] [ 300.00 300.00 300.00 300.00 300.00 300.00 300.00 300.00 ] [ 44.44 55.56 22.22 33.33 88.89 11.11 100.00 11.11 ] ] 

 //Pattern 18 
[[ 11.11 13.89 5.56 8.33 22.22 2.78 25.00 2.78 ] [ 44.44 55.56 22.22 33.33 88.89 11.11 100.00 11.11 ] [ 300.00 300.00 300.00 300.00 300.00 300.00 300.00 300.00 ] ] 
]; 


aux_output_1 from SheetRead(sheet,"'Result Aux'!B1");
Result_sched to SheetWrite(sheet,aux_output_1);

aux_output_2 from SheetRead(sheet,"'Result Aux'!J1");
T to SheetWrite(sheet,aux_output_2);

aux_output_3 from SheetRead(sheet,"'Result Aux'!K1");
t to SheetWrite(sheet,aux_output_3);

aux_output_4 from SheetRead(sheet,"'Result Aux'!L1");
Result_sim to SheetWrite(sheet,aux_output_4);

aux_output_5 from SheetRead(sheet,"'Result Aux'!M1");
Pattern_C to SheetWrite(sheet,aux_output_5);

opt_time to SheetWrite(sheet,"'Result'!E1");

z to SheetWrite(sheet,"'Result'!H1");
d to SheetWrite(sheet,"'Result'!J1");